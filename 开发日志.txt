2020年2月28日
1. 用新笔记本电脑运行时，很多显示性的功能都出现了问题，如控件名字显示不完全，背景画刷又出现了问题。
考虑：是否是因为分辨率的问题，子窗口因为分辨率降低而整体成比例缩小，但是控件的大小还是按像素点来算的，所以就造成了当时很密集的控件现在显示不完整，至于背景出现的问题，待继续实验验证。
问题1解决：重新调整了控件；MFC基于区域的二值分割方法显示出错了的原因是以前没有把在测试里调整好的代码更新到主代码里面。
2.关于背景闪烁最终的解决方案
 	添加OnEraseBkgnd(CDC* pDC)，设置重绘时的背景颜色
	添加OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor)，在前三次重绘时用	OnEraseBkgnd设置的背景刷子，后面则使用透明（或者叫空）的背景刷子。static控件不会受	到重绘背景的影响。
2020年3月1日
1. 关于背景闪烁的解决方法又面临新的问题：添加滑动条之后，当滑动条移动的时候需要刷新背景。考虑：降低刷新的频率。结果：不行。
	更换成EDIT CONTROL + STATIC TEXT的形式，控件不会闪烁了，但是刷新图的时候应该会闪烁。
2. 关于假期编程作业
	①完成基本的子窗口架构
	②完成滑块条阈值分割
2020年3月2日
1. 关于假期编程作业
	①完成连通域面积的计算（8邻域）
	②还需要选取处理区域的功能
	③还需要识别裂缝的算法（考虑实现底层的边缘提取算法去计算周长；目前这个裂缝在阈值小的情况下就会断裂）
	④还需要将数据导出成文档的功能
2. 编程作业目前完成情况
	①程序的所有架构。整个功能集成在一个子窗口，基于原来的ImageProcessing程序；整个功能只使用了OpenCV的一些数据结构，未使用任何其		他函数，全是自己编写的底层代码。
	②基于滑动条的阈值分割。由于人眼最能分辨分割的好坏，所以我选择利用滑动条来实现阈值分割，并实时在窗口左边部分给出预测分割结果，由		人来判断分割是否满足要求，并进行调整。
	③阈值分割后连通域面积的计算。当选好阈值后，点击确认阈值就会开始后面的计算。连通域面积的计算我采用8邻域的规则。
	④裂缝的识别和长度计算。对所有的连通域去计算周长，方法是计算边界点的数目（采用四邻域存在外点则视为边界点的策略），易发现，裂缝区		别与孔洞的特点之一是周长很长，所以当连通域周长大于一定值时，则视为裂缝。裂缝的长度我采用的是周长除以2的方法，目前来说，误差有点大
3.待改善内容
	1. 目前，消除背景的策略是对图像做一些预处理，方法还不够智能，希望找到更好的方法。
	2. 目前是把数据导出到TXT文档，导出Excel文档的方法还没有实现。
	3. 裂缝长度的计算可以再想想其他方法。
2020年3月10日
	终于完成了导出Excel文档的功能。

